{"version":3,"sources":["components/SearchInput/index.js","components/BookListItem/index.js","components/BookList/index.js","utils/API.js","pages/Search.js","App.js","registerServiceWorker.js","index.js"],"names":["SearchInput","_ref","search","onSearchChange","onSearch","react_default","a","createElement","Form","onSubmit","Group","controlId","Label","Control","value","placeholder","onChange","evt","target","Button","variant","type","BookListItem","title","description","link","authors","image","onSave","onDelete","ListGroup","Item","Row","Col","xs","as","href","onClick","join","Image","src","BookList","_ref$books","books","Card","Title","Body","map","book","Object","assign","key","id","API","searchBooks","_searchBooks","asyncToGenerator","regenerator_default","mark","_callee","url","response","wrap","_context","prev","next","concat","fetch","sent","abrupt","json","stop","_x","apply","this","arguments","saveBook","_saveBook","_callee2","_context2","method","headers","Content-Type","body","JSON","stringify","_x2","Search","_useState","useState","_useState2","slicedToArray","setSearch","_useState3","_useState4","setBooks","_ref2","results","preventDefault","items","volumeInfo","imageLinks","thumbnail","infoLink","Fragment","App","react_router_dom","Container","react_router","exact","path","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","status","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.bba91c42.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\n\r\nexport default function SearchInput({ search, onSearchChange, onSearch }) {\r\n  return (\r\n    <Form onSubmit={onSearch}>\r\n      <Form.Group controlId=\"book-title\">\r\n        <Form.Label>Book</Form.Label>\r\n        <Form.Control\r\n          value={search}\r\n          placeholder=\"Book Title\"\r\n          onChange={evt => onSearchChange(evt.target.value)}\r\n        />\r\n      </Form.Group>\r\n      <Button variant=\"primary\" type=\"submit\">\r\n        Search\r\n      </Button>\r\n    </Form>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Row, Col, ListGroup, Button, Image } from \"react-bootstrap\";\r\n\r\nexport default function BookListItem(\r\n  title,\r\n  description,\r\n  link,\r\n  authors,\r\n  image,\r\n  onSave,\r\n  onDelete\r\n) {\r\n  return (\r\n    <ListGroup.Item>\r\n      <Row>\r\n        <Col xs={10}>\r\n          <h2>{title}</h2>\r\n        </Col>\r\n        <Col>\r\n          {link && (\r\n            <Button as=\"a\" href={link} variant=\"primary\" target=\"_blank\">\r\n              View\r\n            </Button>\r\n          )}\r\n          {onSave && (\r\n            <Button\r\n              onClick={() =>\r\n                onSave({ title, description, link, authors, image })\r\n              }\r\n              variant=\"secondary\"\r\n            >\r\n              Save\r\n            </Button>\r\n          )}\r\n          {onDelete && (\r\n            <Button onClick={onDelete} variant=\"danger\">\r\n              Delete\r\n            </Button>\r\n          )}\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <p>{authors && authors.join(\" \")}</p>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col xs={2}>\r\n          <Image src={image} />\r\n        </Col>\r\n        <Col>\r\n          <p>{description}</p>\r\n        </Col>\r\n      </Row>\r\n    </ListGroup.Item>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Card, ListGroup } from \"react-bootstrap\";\r\n\r\nimport BookListItem from \"../BookListItem\"\r\n\r\nexport default function BookList({ books = [] }) {\r\n  return (\r\n    <Card>\r\n      <Card.Title>Results</Card.Title>\r\n      <Card.Body>\r\n        <ListGroup>\r\n          {books.map((book) => (\r\n            <BookListItem key={book.id} {...book} />\r\n          ))}\r\n        </ListGroup>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n","/**\r\n * Get a list of books from the google books api.\r\n * @param {string} title\r\n */\r\n\r\nexport default {\r\n  async searchBooks(title) {\r\n    const url = `https://www.googleapis.com/books/v1/volumes?q=${title}`;\r\n    const response = await fetch(url);\r\n    return response.json();\r\n  },\r\n  async saveBook(book) {\r\n    const response = await fetch(\"/api/books\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({book})\r\n    });\r\n    return response.JSON()\r\n  }\r\n\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\n\r\nimport SearchInput from \"../components/SearchInput\";\r\nimport BookList from \"../components/BookList\";\r\n\r\nimport API from \"../utils/API\";\r\n\r\n\r\nexport default function Search() {\r\n  const [search, setSearch] = useState(\"\");\r\n  const [books, setBooks] = useState([]);\r\n\r\n  const onSave = async (book) => {\r\n    API.saveBook(book);\r\n  }\r\n\r\n  const onSearch = async (evt) => {\r\n    evt.preventDefault();\r\n\r\n    const results = await API.searchBooks(search);\r\n    const books = results.items.map((book) => ({\r\n      id: book.id,\r\n      title: book.volumeInfo.title,\r\n      description: book.volumeInfo.description,\r\n      authors: book.volumeInfo.authors,\r\n      image: book.volumeInfo.imageLinks.thumbnail,\r\n      link: book.volumeInfo.infoLink,\r\n      onSave,\r\n    }))\r\n\r\n\r\n      setBooks (books)\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col>\r\n          <SearchInput\r\n            search={search}\r\n            onSearchChange={setSearch}\r\n            onSearch={onSearch}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <BookList books={books} />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n","import React  from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Container } from 'react-bootstrap';\n\nimport Search from \"./pages/Search\"\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <Router>\n      <Container>\n        {/* <Nav /> */}\n        <Switch>\n          <Route exact path={[\"/\", \"/search\"]}>\n            <Search />\n          </Route>\n          {/* <Route>\n            <NoMatch />\n          </Route> */}\n        </Switch>\n      </Container>\n    </Router>\n  ); \n}\n\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}